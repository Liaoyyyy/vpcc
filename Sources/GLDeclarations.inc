/**
* This file is part of Nokia VPCC implementation
*
* Copyright (c) 2019-2020 Nokia Corporation and/or its subsidiary(-ies). All rights reserved.
*
* Contact: VPCC.contact@nokia.com
*
* This software, including documentation, is protected by copyright controlled by Nokia Corporation and/ or its
* subsidiaries. All rights are reserved.
*
* Copying, including reproducing, storing, adapting or translating, any or all of this material requires the prior
* written consent of Nokia.
*/

#if PLATFORM_WINDOWS

// OpenGL
GL_DECLARE(PFNGLACTIVETEXTUREPROC, glActiveTexture)
GL_DECLARE(PFNGLATTACHSHADERPROC, glAttachShader)
GL_DECLARE(PFNGLBINDATTRIBLOCATIONPROC, glBindAttribLocation)
GL_DECLARE(PFNGLBINDBUFFERPROC, glBindBuffer)
GL_DECLARE(PFNGLBINDFRAMEBUFFERPROC, glBindFramebuffer)
GL_DECLARE(PFNGLBINDRENDERBUFFERPROC, glBindRenderbuffer)
GL_DECLARE(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray)
GL_DECLARE(PFNGLBLENDCOLORPROC, glBlendColor)
GL_DECLARE(PFNGLBLENDEQUATIONSEPARATEPROC, glBlendEquationSeparate)
GL_DECLARE(PFNGLBLENDFUNCSEPARATEPROC, glBlendFuncSeparate)
GL_DECLARE(PFNGLBLITFRAMEBUFFERPROC, glBlitFramebuffer)
GL_DECLARE(PFNGLBUFFERDATAPROC, glBufferData)
GL_DECLARE(PFNGLBUFFERSUBDATAPROC, glBufferSubData)
GL_DECLARE(PFNGLCHECKFRAMEBUFFERSTATUSPROC, glCheckFramebufferStatus)
GL_DECLARE(PFNGLCOMPILESHADERPROC, glCompileShader)
GL_DECLARE(PFNGLCOMPRESSEDTEXIMAGE2DPROC, glCompressedTexImage2D)
GL_DECLARE(PFNGLCOPYIMAGESUBDATAPROC, glCopyImageSubData)
GL_DECLARE(PFNGLCREATEPROGRAMPROC, glCreateProgram)
GL_DECLARE(PFNGLCREATESHADERPROC, glCreateShader)
GL_DECLARE(PFNGLDEBUGMESSAGECALLBACKPROC, glDebugMessageCallback)
GL_DECLARE(PFNGLDEBUGMESSAGECONTROLPROC, glDebugMessageControl)
GL_DECLARE(PFNGLDELETEBUFFERSPROC, glDeleteBuffers)
GL_DECLARE(PFNGLDELETEFRAMEBUFFERSPROC, glDeleteFramebuffers)
GL_DECLARE(PFNGLDELETEPROGRAMPROC, glDeleteProgram)
GL_DECLARE(PFNGLDELETERENDERBUFFERSPROC, glDeleteRenderbuffers)
GL_DECLARE(PFNGLDELETESHADERPROC, glDeleteShader)
GL_DECLARE(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays)
GL_DECLARE(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray)
GL_DECLARE(PFNGLDRAWARRAYSINSTANCEDPROC, glDrawArraysInstanced)
GL_DECLARE(PFNGLDRAWBUFFERSPROC, glDrawBuffers)
GL_DECLARE(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray)
GL_DECLARE(PFNGLFRAMEBUFFERRENDERBUFFERPROC, glFramebufferRenderbuffer)
GL_DECLARE(PFNGLFRAMEBUFFERTEXTURE2DPROC, glFramebufferTexture2D)
GL_DECLARE(PFNGLGENBUFFERSPROC, glGenBuffers)
GL_DECLARE(PFNGLGENERATEMIPMAPPROC, glGenerateMipmap)
GL_DECLARE(PFNGLGENFRAMEBUFFERSPROC, glGenFramebuffers)
GL_DECLARE(PFNGLGENRENDERBUFFERSPROC, glGenRenderbuffers)
GL_DECLARE(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays)
GL_DECLARE(PFNGLGETACTIVEATTRIBPROC, glGetActiveAttrib)
GL_DECLARE(PFNGLGETACTIVEUNIFORMPROC, glGetActiveUniform)
GL_DECLARE(PFNGLGETATTRIBLOCATIONPROC, glGetAttribLocation)
GL_DECLARE(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog)
GL_DECLARE(PFNGLGETPROGRAMIVPROC, glGetProgramiv)
GL_DECLARE(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog)
GL_DECLARE(PFNGLGETSHADERIVPROC, glGetShaderiv)
GL_DECLARE(PFNGLGETSTRINGIPROC, glGetStringi)
GL_DECLARE(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation)
GL_DECLARE(PFNGLINVALIDATEFRAMEBUFFERPROC, glInvalidateFramebuffer)
GL_DECLARE(PFNGLLINKPROGRAMPROC, glLinkProgram)
GL_DECLARE(PFNGLMAPBUFFERPROC, glMapBuffer)
GL_DECLARE(PFNGLRENDERBUFFERSTORAGEPROC, glRenderbufferStorage)
GL_DECLARE(PFNGLSHADERSOURCEPROC, glShaderSource)
GL_DECLARE(PFNGLSTENCILFUNCSEPARATEPROC, glStencilFuncSeparate) 
GL_DECLARE(PFNGLSTENCILOPSEPARATEPROC, glStencilOpSeparate)
GL_DECLARE(PFNGLUNIFORM1FPROC, glUniform1f)
GL_DECLARE(PFNGLUNIFORM1IPROC, glUniform1i)
GL_DECLARE(PFNGLUNIFORM2FVPROC, glUniform2fv)
GL_DECLARE(PFNGLUNIFORM2IVPROC, glUniform2iv)
GL_DECLARE(PFNGLUNIFORM3FVPROC, glUniform3fv)
GL_DECLARE(PFNGLUNIFORM3IVPROC, glUniform3iv)
GL_DECLARE(PFNGLUNIFORM3FPROC, glUniform3f)
GL_DECLARE(PFNGLUNIFORM4FPROC, glUniform4f)
GL_DECLARE(PFNGLUNIFORM4FVPROC, glUniform4fv)
GL_DECLARE(PFNGLUNIFORM4IVPROC, glUniform4iv)
GL_DECLARE(PFNGLUNIFORMMATRIX2FVPROC, glUniformMatrix2fv)
GL_DECLARE(PFNGLUNIFORMMATRIX3FVPROC, glUniformMatrix3fv)
GL_DECLARE(PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv)
GL_DECLARE(PFNGLUNMAPBUFFERPROC, glUnmapBuffer)
GL_DECLARE(PFNGLUSEPROGRAMPROC, glUseProgram)
GL_DECLARE(PFNGLVALIDATEPROGRAMPROC, glValidateProgram)
GL_DECLARE(PFNGLVERTEXATTRIB2FPROC, glVertexAttrib2f)
GL_DECLARE(PFNGLVERTEXATTRIB4FPROC, glVertexAttrib4f)
GL_DECLARE(PFNGLVERTEXATTRIBDIVISORPROC, glVertexAttribDivisor)
GL_DECLARE(PFNGLVERTEXATTRIBIPOINTERPROC, glVertexAttribIPointer)
GL_DECLARE(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer)
GL_DECLARE(PFNGLTRANSFORMFEEDBACKVARYINGSPROC, glTransformFeedbackVaryings)

#if GL_KHR_debug

#if PLATFORM_WINDOWS

#define GL_DEBUG_SOURCE_APPLICATION_KHR GL_DEBUG_SOURCE_APPLICATION
#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR GL_MAX_DEBUG_MESSAGE_LENGTH
#define PFNGLDEBUGMESSAGECONTROLKHRPROC PFNGLDEBUGMESSAGECONTROLPROC
#define PFNGLDEBUGMESSAGEINSERTKHRPROC PFNGLDEBUGMESSAGEINSERTPROC
#define PFNGLDEBUGMESSAGECALLBACKKHRPROC PFNGLDEBUGMESSAGECALLBACKPROC
#define PFNGLGETDEBUGMESSAGELOGKHRPROC PFNGLGETDEBUGMESSAGELOGPROC
#define PFNGLPUSHDEBUGGROUPKHRPROC PFNGLPUSHDEBUGGROUPPROC
#define PFNGLPOPDEBUGGROUPKHRPROC PFNGLPOPDEBUGGROUPPROC
#define PFNGLOBJECTLABELKHRPROC PFNGLOBJECTLABELPROC
#define PFNGLGETOBJECTLABELKHRPROC PFNGLGETOBJECTLABELPROC
#define PFNGLOBJECTPTRLABELKHRPROC PFNGLOBJECTPTRLABELPROC
#define PFNGLGETOBJECTPTRLABELKHRPROC PFNGLGETOBJECTPTRLABELPROC
#define PFNGLGETPOINTERVKHRPROC PFNGLGETPOINTERVEXTPROC

#endif

#endif

// WGL
GL_DECLARE(PFNWGLCREATECONTEXTATTRIBSARBPROC, wglCreateContextAttribsARB)
GL_DECLARE(PFNWGLGETSWAPINTERVALEXTPROC, wglGetSwapIntervalEXT)
GL_DECLARE(PFNWGLSWAPINTERVALEXTPROC, wglSwapIntervalEXT)

#endif

#if PLATFORM_ANDROID

GL_DECLARE(PFNGLDEBUGMESSAGECONTROLKHRPROC, glDebugMessageControlKHR)
GL_DECLARE(PFNGLDEBUGMESSAGEINSERTKHRPROC, glDebugMessageInsertKHR)
GL_DECLARE(PFNGLDEBUGMESSAGECALLBACKKHRPROC, glDebugMessageCallbackKHR)
GL_DECLARE(PFNGLGETDEBUGMESSAGELOGKHRPROC, glGetDebugMessageLogKHR)
GL_DECLARE(PFNGLPUSHDEBUGGROUPKHRPROC, glPushDebugGroupKHR)
GL_DECLARE(PFNGLPOPDEBUGGROUPKHRPROC, glPopDebugGroupKHR)
GL_DECLARE(PFNGLOBJECTLABELKHRPROC, glObjectLabelKHR)
GL_DECLARE(PFNGLGETOBJECTLABELKHRPROC, glGetObjectLabelKHR)
GL_DECLARE(PFNGLOBJECTPTRLABELKHRPROC, glObjectPtrLabelKHR)
GL_DECLARE(PFNGLGETOBJECTPTRLABELKHRPROC, glGetObjectPtrLabelKHR)
GL_DECLARE(PFNGLGETPOINTERVKHRPROC, glGetPointervKHR)

#endif
